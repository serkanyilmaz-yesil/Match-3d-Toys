// Android Resolver Repos Start
([rootProject] + (rootProject.subprojects as List)).each { project ->
    project.repositories {
        def unityProjectPath = $/file:///**DIR_UNITYPROJECT**/$.replace("\\", "/")
        maven {
            url "https://maven.google.com"
        }
        maven {
            url "https://s3.amazonaws.com/com.tabtale.repo/android/maven/backup" // Assets/Editor/TTPDependencies.xml:15
        }
        maven {
            url "https://s3.amazonaws.com/com.tabtale.repo/android/maven/ttplugins" // Assets/Editor/TTPDependencies.xml:15
        }
        maven {
            url "https://s3.amazonaws.com/com.tabtale.repo/android/maven/thirdparty" // Assets/Editor/TTPDependencies.xml:15
        }
        maven {
            url "https://s3.amazonaws.com/moat-sdk-builds" // Assets/Editor/TTPDependencies.xml:15
        }
        maven {
            url "https://maven.ogury.co" // Assets/Editor/TTPDependencies.xml:15
        }
        maven {
            url "https://android-sdk.is.com" // Assets/Editor/TTPDependencies.xml:15
        }
        maven {
            url "https://dl-maven-android.mintegral.com/repository/mbridge_android_sdk_oversea" // Assets/Editor/TTPDependencies.xml:15
        }
        maven {
            url "https://jitpack.io" // Assets/Editor/TTPDependencies.xml:15
        }
        maven {
            url "https://mvnrepository.com/artifact/com.inmobi.monetization/inmobi-ads" // Assets/Editor/TTPDependencies.xml:15
        }
        maven {
            url "https://artifact.bytedance.com/repository/pangle" // Assets/Editor/TTPDependencies.xml:15
        }
        mavenLocal()
        jcenter()
        mavenCentral()
    }
}
// Android Resolver Repos End
apply plugin: 'com.android.library'
**APPLY_PLUGINS**

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
// Android Resolver Dependencies Start
    implementation 'com.tabtale.tt_plugins.android:TT_Plugins_Analytics:3.8.0.7.4' // Assets/Editor/TTPDependencies.xml:19
    implementation 'com.tabtale.tt_plugins.android:TT_Plugins_AppsFlyer:3.8.0.6.2' // Assets/Editor/TTPDependencies.xml:18
    implementation 'com.tabtale.tt_plugins.android:TT_Plugins_Core:3.8.0.7.3' // Assets/Editor/TTPDependencies.xml:16
    implementation 'com.tabtale.tt_plugins.android:TT_Plugins_FirebaseAgent:3.8.0.7.4' // Assets/Editor/TTPDependencies.xml:20
    implementation 'com.tabtale.tt_plugins.android:TT_Plugins_Remote_Config:0.0.0.0.42' // Assets/Editor/TTPDependencies.xml:21
    implementation 'com.tabtale.tt_plugins.android:TT_Plugins_Unity:3.8.0.0.1' // Assets/Editor/TTPDependencies.xml:17
// Android Resolver Dependencies End
**DEPS**}

// Android Resolver Exclusions Start
android {
  packagingOptions {
      exclude ('/lib/armeabi/*' + '*')
      exclude ('/lib/mips/*' + '*')
      exclude ('/lib/mips64/*' + '*')
      exclude ('/lib/x86/*' + '*')
      exclude ('/lib/x86_64/*' + '*')
  }
}
// Android Resolver Exclusions End
android {
    compileSdkVersion **APIVERSION**
    buildToolsVersion '**BUILDTOOLS**'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion **MINSDKVERSION**
        targetSdkVersion **TARGETSDKVERSION**
        ndk {
            abiFilters **ABIFILTERS**
        }
        versionCode **VERSIONCODE**
        versionName '**VERSIONNAME**'
        consumerProguardFiles 'proguard-unity.txt'**USER_PROGUARD**
    }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        noCompress = **BUILTIN_NOCOMPRESS** + unityStreamingAssets.tokenize(', ')
        ignoreAssetsPattern = "!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~"
    }**PACKAGING_OPTIONS**
}**REPOSITORIES**
**IL_CPP_BUILD_SETUP**
**SOURCE_BUILD_SETUP**
**EXTERNAL_SOURCES**
